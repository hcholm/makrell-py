
{match x
    3
        "tre"
    4
        "fire"
    []
        "tom liste"
    [2 3]
        "ei liste"
    _
        "noe"
}
{if
    x == 3
        "tre"
    x == 4
        "fire"
    {isinstance x list} && {len x} == 0
        "tom liste"
    true
        "noe"
}

{match x
    _:int
        "an int"
    [_:int]
        "a list with one int"
    [a]
        "a list with one item, assign it to a"
}

{if
    {isinstance x int}
        "an int"

    {isinstance x list} && {len x} == 1
    && {([a1] -> {isinstance a1 int}) x@0}
        "a list with one int"

    {isinstance x list} && {len x} == 1
    && a = {([a1] -> {do
            a = a1
            a})
        x@0}
        "a list with one item, assign it to a: " + a | str
}

k = 7
{def odd [x]
    x % 2 == 1}
{match x
    [
        [
            2
            p={obj Point _ y=_ && y>3}
        ]
        {atleast 2 _==k} && {call odd _}
    ]
        "complex match that assigns to p and y"
    _
        "something else"
}