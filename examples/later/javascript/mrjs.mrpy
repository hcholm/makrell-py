
{fun node_to_js_src [n]
    r = node_to_js_src

    {match n

        {$$ a . b}

            {+ {r a} "." {r b}}

        {$$ a + b}
            {+ "(" {r a} "+" {r b} ")"}
        {$$ a - b}
            {+ "(" {r a} "+" {r b} ")"}
        {$$ a * b}
            {+ "(" {r a} "+" {r b} ")"}
        {$$ a / b}
            {+ "(" {r a} "+" {r b} ")"}
        {$$ a == b}
            {+ "(" {r a} "===" {r b} ")"}
        {$$ a != b}
            {+ "(" {r a} "!==" {r b} ")"}
        {$$ a < b}
            {+ "(" {r a} "<" {r b} ")"}
        {$$ a <= b}
            {+ "(" {r a} "<=" {r b} ")"}
        {$$ a > b}
            {+ "(" {r a} ">" {r b} ")"}
        {$$ a >= b}
            {+ "(" {r a} ">=" {r b} ")"}
    
        {$$ variable = value}

            {+ {r variable} "=" {r value} ";\n"}

        {$$ variable := value}

            {+ "let " {r variable} "=" {r value} ";\n"}

        {$$ {fun [_*params] _*lines}}

            {do
                params_r = {map r params}
                params_str = ",".{join params_r}
                lines_r = {map r lines}
                {+ "(function(" params_str ") {\n"
                    {"".join lines}
                "\n})\n"}
            }

        {$$ {f _*params}}

            {do
                f_str = {r f}
                params_r = {map r params}
                params_str = ",".{join params_r}
                {+ f_str "(" params_str ")"}
            }

        _
            x
    }
}

{fun mrjs_src_to_js_src [nodes]
    nodes = {parse_mrjs src}
    js_blocks = nodes |* node_to_js
    {"\n".join js_blocks}
}

{fun mrjs_file_to_js_file [src_file dest_file]
    mrjs_src = {read_file src_file}
    js_src = mrjs_src | mrjs_src_to_js_src 
    {write_file dest_file js_src}
}